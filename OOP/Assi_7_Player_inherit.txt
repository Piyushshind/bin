


 class Player {
    private String name;
    private int age;
    private String team;

    // Constructor
    public Player(String name, int age, String team) {
        this.name = name;
        this.age = age;
        this.team = team;
    }

    // Getter and Setter methods
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getTeam() {
        return team;
    }

    public void setTeam(String team) {
        this.team = team;
    }

    // Method to display player details
    public void displayDetails() {
        System.out.println("Name: " + name);
        System.out.println("Age: " + age);
        System.out.println("Team: " + team);
    }
}

// CricketPlayer class inheriting from Player
class CricketPlayer extends Player {
    private String role;

    // Constructor
    public CricketPlayer(String name, int age, String team, String role) {
        super(name, age, team);
        this.role = role;
    }

    // Getter and Setter for role
    public String getRole() {
        return role;
    }

    public void setRole(String role) {
        this.role = role;
    }

    // Overriding displayDetails method
    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Role: " + role);
    }
}

// FootballPlayer class inheriting from Player
class FootballPlayer extends Player {
    private String position;

    // Constructor
    public FootballPlayer(String name, int age, String team, String position) {
        super(name, age, team);
        this.position = position;
    }

    // Getter and Setter for position
    public String getPosition() {
        return position;
    }

    public void setPosition(String position) {
        this.position = position;
    }

    // Overriding displayDetails method
    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Position: " + position);
    }
}

// HockeyPlayer class inheriting from Player
class HockeyPlayer extends Player {
    private String fieldPosition;

    // Constructor
    public HockeyPlayer(String name, int age, String team, String fieldPosition) {
        super(name, age, team);
        this.fieldPosition = fieldPosition;
    }

    // Getter and Setter for fieldPosition
    public String getFieldPosition() {
        return fieldPosition;
    }

    public void setFieldPosition(String fieldPosition) {
        this.fieldPosition = fieldPosition;
    }

    // Overriding displayDetails method
    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Field Position: " + fieldPosition);
    }
}

// Main class to test the inheritance
public class Main {
    public static void main(String[] args) {
        // Creating objects of each player type
        CricketPlayer cricketPlayer = new CricketPlayer("Virat Kohli", 34, "RCB", "Batsman");
        FootballPlayer footballPlayer = new FootballPlayer("Lionel Messi", 36, "PSG", "Forward");
        HockeyPlayer hockeyPlayer = new HockeyPlayer("Manpreet Singh", 31, "India", "Midfielder");

        // Displaying details of each player
        System.out.println("Cricket Player Details:");
        cricketPlayer.displayDetails();

        System.out.println("\nFootball Player Details:");
        footballPlayer.displayDetails();

        System.out.println("\nHockey Player Details:");
        hockeyPlayer.displayDetails();
    }
}
