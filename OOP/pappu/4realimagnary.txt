#include <iostream>

using namespace std;

class Complex {
    double real;
    double imaginary;
public:
    Complex() {
        real = 0;
        imaginary = 0;
    }
    Complex(double r, double i) {
        real = r;
        imaginary = i;
    }
    friend Complex operator+(Complex c1,Complex c2);
    friend Complex operator-(Complex c1, Complex c2);
    Complex operator*(const Complex c) ;
    Complex operator/(const Complex c) ;
    void display()  {
        cout << real << " + " << imaginary << "i" << endl;
    }
};

Complex operator+(Complex c1, Complex c2) {
    return Complex(c1.real + c2.real, c1.imaginary + c2.imaginary);
}

Complex operator-(Complex c1, Complex c2) {
    return Complex(c1.real - c2.real, c1.imaginary - c2.imaginary);
}

Complex Complex::operator*(Complex c)  {
    return Complex(real * c.real - imaginary * c.imaginary, real * c.imaginary + imaginary * c.real);
}

Complex Complex::operator/(Complex c)  {
    double denominator = c.real * c.real + c.imaginary * c.imaginary;
    return Complex((real * c.real + imaginary * c.imaginary) / denominator, (imaginary * c.real - real * c.imaginary) / denominator);
}

int main() {
    Complex c1(2, 3);
    Complex c2(4, -5);

    Complex c3 = c1 + c2;
    cout << "c1 + c2 = ";
    c3.display();

    Complex c4 = c1 - c2;
    cout << "c1 - c2 = ";
    c4.display();

    Complex c5 = c1 * c2;
    cout << "c1 * c2 = ";
    c5.display();

    Complex c6 = c1 / c2;
    cout << "c1 / c2 = ";
    c6.display();

    return 0;
}
