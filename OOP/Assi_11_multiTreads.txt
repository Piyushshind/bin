  


 class SharedResource {
    private int count = 0;

    public synchronized void increment() {
        count++;
        System.out.println("Incremented count to " + count);
    }

    public synchronized void decrement() {
        count--;
        System.out.println("Decremented count to " + count);
    }
}

class IncrementThread extends Thread {
    private SharedResource resource;

    public IncrementThread(SharedResource resource) {
        this.resource = resource;
    }

    public void run() {
        for (int i = 0; i < 5; i++) {
            resource.increment();
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class DecrementThread extends Thread {
    private SharedResource resource;

    public DecrementThread(SharedResource resource) {
        this.resource = resource;
    }

    public void run() {
        for (int i = 0; i < 5; i++) {
            resource.decrement();
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

public class ThreadCommunicationDemo {
    public static void main(String[] args) {
        SharedResource resource = new SharedResource();

        IncrementThread incrementThread = new IncrementThread(resource);
        DecrementThread decrementThread = new DecrementThread(resource);

        incrementThread.start();
        decrementThread.start();
    }
}